# Index Mapping Create


## API call to create index with mappings
curl -X PUT -H "Content-Type:application/json" -d '{"mappings":{"properties":{"item_id":{"type":"text"},"resolved_id":{"type":"text"},"given_url":{"type":"text"},"given_title":{"type":"text"},"favorite":{"type":"integer"},"status":{"type":"integer"},"time_added":{"type":"date"},"time_updated":{"type":"date"},"time_read":{"type":"date"},"time_favorited":{"type":"date"},"sort_id":{"type":"integer"},"resolved_title":{"type":"text"},"resolved_url":{"type":"text"},"excerpt":{"type":"text"},"is_article":{"type":"integer"},"is_index":{"type":"integer"},"has_image":{"type":"integer"},"word_count":{"type":"integer"},"lang":{"type":"text"},"time_to_read":{"type":"integer"},"top_image_url":{"type":"text"},"image":{"properties":{"item_id":{"type":"text"},"src":{"type":"text"},"width":{"type":"integer"},"height":{"type":"integer"}}}}}}}' 'http://192.168.1.100:9200/pocket'

Respose:

{"acknowledged":true,"shards_acknowledged":true,"index":"pocket"}



// Pipe input ---> jq (-S to sort keys, -c to compact) ---> filenaame_of_input
|| jq .list -S

## Sample Document

{
    "319540134": {
      "item_id":        { "type": "text" },
      "resolved_id":    { "type": "text" },
      "given_url":      { "type": "text" },
      "given_title":    { "type": "text" },
      "favorite":       { "type": "integer" },
      "status":         { "type": "integer" },

      "time_added":     {
        "type":   "date",
        "format": "yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis"
      },
      "time_updated":   {
        "type":   "date",
        "format": "yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis"
      },
      "time_read":      {
        "type":   "date",
        "format": "yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis"
      },
      "time_favorited": {
        "type":   "date",
        "format": "yyyy-MM-dd HH:mm:ss||yyyy-MM-dd||epoch_millis"
      },

      "sort_id":        { "type": "integer" },
      "resolved_title": { "type": "text" },
      "resolved_url":   { "type": "text" },
      "excerpt":        { "type": "text" },
      "is_article":     { "type": "integer" },
      "is_index":       { "type": "integer" },
//       "has_video":      { "type": "integer" },
      "has_image":      { "type": "integer" },
      "word_count":     { "type": "integer" },
      "lang":           { "type": "text" },
      "time_to_read":   { "type": "integer" },
      "top_image_url":  { "type": "text" },

      "image": {
        "properties": {
          "item_id":    { "type": "text" },
          "src":        { "type": "text" },
          "width":      { "type": "integer" },
          "height":     { "type": "integer" }
        }
      },
//       "authors":        { "type": "nested" },
//      "images":         { "type": "nested" },
//      "videos":         { "type": "nested" },
//      "tags":           { "type": "nested" },
//      "listen_duration_estimate":     { "type": "integer" }
    }
}

TO DO!
==========================
Delete pocket index
Create pocket index with new mapping
Test writing a document that contains more than mapped fields/data

# POST a new document

Supplying the _id by specifying <index>/_doc/<id_number>

ES will automaticall generate one if using <index>/_doc


curl -XPOST "http://es01:9200/pocket/_doc/327970174" -H 'Content-Type: application/json' -d'
{
  "authors": {
    "7382898": {
      "author_id": "7382898",
      "item_id": "327970174",
      "name": "Joseph Zimmerman",
      "url": "http://coding.smashingmagazine.com/author/joseph-zimmerman/?rel=author"
    }
  },
  "excerpt": "In the first part of this series, we discussed Backbone.Marionette’s Application. This time around, we’ll discuss the module system that is included in Backbone.Marionette.",
  "favorite": "0",
  "given_title": "A Thorough Introduction To Backbone.Marionette (Part 2)",
  "given_url": "http://coding.smashingmagazine.com/2013/04/02/thorough-introduction-backbone-marionette-part-2-modules/",
  "has_image": "0",
  "has_video": "0",
  "is_article": "1",
  "is_index": "0",
  "item_id": "327970174",
  "lang": "en",
  "listen_duration_estimate": 1193,
  "resolved_id": "327970174",
  "resolved_title": "Modules — A Thorough Introduction To Backbone.Marionette (Part 2)",
  "resolved_url": "http://coding.smashingmagazine.com/2013/04/02/thorough-introduction-backbone-marionette-part-2-modules/",
  "sort_id": 4,
  "status": "0",
  "time_added": "1364937492",
  "time_favorited": "0",
  "time_read": "0",
  "time_to_read": 14,
  "time_updated": "1365013228",
  "word_count": "3081"
}'

## Current mappings

{
  "mappings": {
    "properties": {
      "excerpt": {
        "type": "text"
      },
      "favorite": {
        "type": "integer"
      },
      "given_title": {
        "type": "text"
      },
      "given_url": {
        "type": "text"
      },
      "has_image": {
        "type": "integer"
      },
      "image": {
        "properties": {
          "height": {
            "type": "integer"
          },
          "item_id": {
            "type": "text"
          },
          "src": {
            "type": "text"
          },
          "width": {
            "type": "integer"
          }
        }
      },
      "is_article": {
        "type": "integer"
      },
      "is_index": {
        "type": "integer"
      },
      "item_id": {
        "type": "text"
      },
      "lang": {
        "type": "text"
      },
      "resolved_id": {
        "type": "text"
      },
      "resolved_title": {
        "type": "text"
      },
      "resolved_url": {
        "type": "text"
      },
      "sort_id": {
        "type": "integer"
      },
      "status": {
        "type": "integer"
      },
      "time_added": {
        "type": "date"
      },
      "time_favorited": {
        "type": "date"
      },
      "time_read": {
        "type": "date"
      },
      "time_to_read": {
        "type": "integer"
      },
      "time_updated": {
        "type": "date"
      },
      "top_image_url": {
        "type": "text"
      },
      "word_count": {
        "type": "integer"
      }
    }
  }
}
